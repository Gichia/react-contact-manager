{"version":3,"sources":["components/layouts/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layouts/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","react_router_dom","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","style","cursor","onClick","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layouts_TextInputGroup","EditContact","updateContact","match","params","put","About","NotFound","Test","title","body","fetch","then","json","App","context_Provider","layouts_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5754d97.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst Header = (props) => {\n\n  const { branding } = props;\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: \"Contact Manager App\"\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT': return {\n            ...state,\n            contacts: state.contacts.filter(contact => contact.id !== action.payload)\n        };\n        case 'ADD_CONTACT': return {\n            ...state,\n            contacts: [action.payload, ...state.contacts]\n        };\n        case 'UPDATE_CONTACT': return {\n            ...state,\n            contacts: state.contacts.map(\n                contact => contact.id === action.payload.id\n                 ? (contact = action.payload)\n                 : contact\n            )\n        };\n        default: return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    };\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: res.data});\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children} \n            </Context.Provider>\n        );\n    }\n\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n    onDeleteClick = async (id, dispatch) => {\n      try {\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        dispatch({\n          type: 'DELETE_CONTACT',\n          payload: id\n        });\n      } catch (e) {\n        dispatch({\n          type: 'DELETE_CONTACT',\n          payload: id\n        });\n      }\n    };\n\n  render() {\n\n    const {\n      id,\n      name,\n      email,\n      phone\n    } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n\n          return (\n            <div className = \"card card-body mb-3\" >\n              <h4 > \n                {name} \n                <i \n                  className = \"fas fa-sort-down pl-2\"\n                  style = {{cursor: 'pointer'}}\n                  onClick = {() => {\n                    this.setState({\n                      showContactInfo: !this.state.showContactInfo\n                    });\n                  }} \n                >\n                </i>\n                <i\n                  className=\"fas fa-times\"\n                  style={{\n                    cursor: 'pointer',\n                    float: 'right',\n                    color: 'red'\n                  }}\n                  onClick = {this.onDeleteClick.bind(this, id, dispatch)}\n                >\n                </i>\n                <Link to={`/contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  >\n                  </i>\n                </Link>\n              </h4> \n              { \n                showContactInfo \n                ? \n                  (\n                    <ul className=\"list-group\" >\n                      <li\n                        className=\"list-group-item\"\n                      >\n                        Email: {email}\n                      </li>\n                      <li className=\"list-group-item\" >\n                        Phone: {phone}\n                      </li>\n                    </ul> \n                  ) \n                :\n                  null\n              }\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport Contact from './Contact';\n\nclass Contacts extends Component {\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n\n          return ( \n            <React.Fragment > \n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\n              {contacts.map(contact => ( \n                <Contact \n                  key = {contact.id}\n                  contact = {contact}\n                />\n              ))} \n            </React.Fragment>\n          )\n\n        }}\n      </Consumer>\n    )\n  }\n\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type} \n        name={name}\n        className = {\n          classnames(\"form-control form-control-lg\", {\n             \"is-invalid\": error\n          })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && < p className = \"invalid-feedback\" > {error} </p>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onChange = e => this.setState({\n    [e.target.name]: e.target.value\n  });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    \n    const { name, email, phone } = this.state;\n\n    // Validate data\n    if(name === '') {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    };\n\n    if(email === '') {\n      this.setState({\n        errors: {\n          email: \"Email is required\"\n        }\n      });\n      return;\n    };\n\n    if (phone === '') {\n      this.setState({\n        errors: {\n          phone: \"Phone is required\"\n        }\n      });\n      return;\n    };\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n    dispatch({\n      type: 'ADD_CONTACT',\n      payload: res.data\n    });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // Redirect to home page\n    this.props.history.push('/');\n\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return <Consumer>\n      {value => {\n        const { dispatch } = value;\n        return (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">\n              <h4>New Contact</h4>\n            </div>\n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                <TextInputGroup \n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n                <TextInputGroup \n                  label=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextInputGroup \n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter Phone Number\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <input \n                  type=\"submit\"\n                  value=\"Add Contact\"\n                  className=\"btn btn-primary btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        )\n      }}\n    </Consumer>\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layouts/TextInputGroup';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onChange = e => this.setState({\n    [e.target.name]: e.target.value\n  });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    \n    const { name, email, phone } = this.state;\n\n    // Validate data\n    if(name === '') {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    };\n\n    if(email === '') {\n      this.setState({\n        errors: {\n          email: \"Email is required\"\n        }\n      });\n      return;\n    };\n\n    if (phone === '') {\n      this.setState({\n        errors: {\n          phone: \"Phone is required\"\n        }\n      });\n      return;\n    };\n\n    const updateContact = {\n      name,\n      email,\n      phone\n    }\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\n\n    dispatch({\n      type: 'UPDATE_CONTACT',\n      payload: res.data\n    });\n\n    // Clear State\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    // Redirect to home page\n    this.props.history.push('/');\n\n  }\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return <Consumer>\n      {value => {\n        const { dispatch } = value;\n        return (\n          <div className=\"card mb-3\">\n            <div className=\"card-header\">\n              <h4>Edit Contact</h4>\n            </div>\n            <div className=\"card-body\">\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                <TextInputGroup \n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                />\n                <TextInputGroup \n                  label=\"Email\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Enter Email\"\n                  value={email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                />\n                <TextInputGroup \n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter Phone Number\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                />\n                <input \n                  type=\"submit\"\n                  value=\"Update Contact\"\n                  className=\"btn btn-warning btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        )\n      }}\n    </Consumer>\n  }\n}\n\nexport default EditContact;","import React from 'react'\n\nconst About = () => {\n  return (\n    <div>\n        <h1 className=\"display-4\">About Contact Manager</h1>\n        <p className=\"lead\">A simple app to manage contacts</p>  \n        <p className=\"text-secondary\">Version 1.0.0</p> \n    </div>\n  )\n}\n\nexport default About;","import React from 'react'\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry that page does not exist</p>\n    </div>\n  )\n}\n\nexport default NotFound;","import React, { Component } from 'react';\n\nclass Test extends Component {\n\n  state = {\n    title: '',\n    body: ''\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\n      .then(res => res.json())\n      .then(data => this.setState({\n        title: data.title,\n        body: data.body\n      }));\n  };\n\n  render() {\n    const { title, body } = this.state;\n\n    return (\n      <div>\n        <h1 className=\"display-4\">{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/layouts/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  component={Contacts}\n                />\n                <Route\n                  exact\n                  path=\"/contact/add\"\n                  component={AddContact}\n                />\n                <Route\n                  exact\n                  path=\"/contact/edit/:id\"\n                  component={EditContact}\n                />\n                <Route\n                  exact\n                  path=\"/about\"\n                  component={About}\n                />\n\n                <Route exact path=\"/test\" component={Test}/>\n\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}